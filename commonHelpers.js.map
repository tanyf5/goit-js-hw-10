{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('input#datetime-picker');\nconst btn = document.querySelector('button');\nconst divTimer = document.querySelector('.timer');\nlet userSelectedDate = 0;\n\nconst options = {\n  //   inline: true,\n  enableTime: true,\n  time_24hr: true,\n  dateFormat: 'Y-m-d H:i',\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate > options.defaultDate) {\n      btn.disabled = false;\n    } else {\n      btn.disabled = true;\n      iziToast.error({\n        title: 'Attention',\n        message: 'Please choose a date in the future',\n        position: 'topCenter',\n      });\n    }\n  },\n};\n\n// input.flatpickr(options);\nflatpickr(input, options);\n\nbtn.addEventListener('click', start);\n\nfunction start() {\n  btn.disabled = true;\n  input.disabled = true;\n\n  let numberOfMs = userSelectedDate - options.defaultDate;\n\n  const intervalId = setInterval(() => {\n    if (numberOfMs > 0) {\n      const time = convertMs(numberOfMs);\n      render(time);\n      numberOfMs -= 1000;\n    } else {\n      clearInterval(intervalId);\n      btn.disabled = false;\n      input.disabled = false;\n    }\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.padStart(2, '0');\n}\n\nfunction render(time) {\n  divTimer.querySelector('span[data-days]').innerHTML = addLeadingZero(\n    time.days.toString()\n  );\n  divTimer.querySelector('span[data-hours]').innerHTML = addLeadingZero(\n    time.hours.toString()\n  );\n  divTimer.querySelector('span[data-minutes]').innerHTML = addLeadingZero(\n    time.minutes.toString()\n  );\n  divTimer.querySelector('span[data-seconds]').innerHTML = addLeadingZero(\n    time.seconds.toString()\n  );\n}\n"],"names":["input","btn","divTimer","userSelectedDate","options","selectedDates","iziToast","flatpickr","start","numberOfMs","intervalId","time","convertMs","render","ms","days","hours","minutes","seconds","addLeadingZero","value"],"mappings":"2FAMA,MAAMA,EAAQ,SAAS,cAAc,uBAAuB,EACtDC,EAAM,SAAS,cAAc,QAAQ,EACrCC,EAAW,SAAS,cAAc,QAAQ,EAChD,IAAIC,EAAmB,EAEvB,MAAMC,EAAU,CAEd,WAAY,GACZ,UAAW,GACX,WAAY,YACZ,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAC9BF,EAAmBC,EAAQ,YAC7BH,EAAI,SAAW,IAEfA,EAAI,SAAW,GACfK,EAAS,MAAM,CACb,MAAO,YACP,QAAS,qCACT,SAAU,WAClB,CAAO,EAEJ,CACH,EAGAC,EAAUP,EAAOI,CAAO,EAExBH,EAAI,iBAAiB,QAASO,CAAK,EAEnC,SAASA,GAAQ,CACfP,EAAI,SAAW,GACfD,EAAM,SAAW,GAEjB,IAAIS,EAAaN,EAAmBC,EAAQ,YAE5C,MAAMM,EAAa,YAAY,IAAM,CACnC,GAAID,EAAa,EAAG,CAClB,MAAME,EAAOC,EAAUH,CAAU,EACjCI,EAAOF,CAAI,EACXF,GAAc,GACpB,MACM,cAAcC,CAAU,EACxBT,EAAI,SAAW,GACfD,EAAM,SAAW,EAEpB,EAAE,GAAI,CACT,CAEA,SAASY,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAS,EAAG,GAAG,CAC9B,CAEA,SAASP,EAAOF,EAAM,CACpBT,EAAS,cAAc,iBAAiB,EAAE,UAAYiB,EACpDR,EAAK,KAAK,SAAU,CACxB,EACET,EAAS,cAAc,kBAAkB,EAAE,UAAYiB,EACrDR,EAAK,MAAM,SAAU,CACzB,EACET,EAAS,cAAc,oBAAoB,EAAE,UAAYiB,EACvDR,EAAK,QAAQ,SAAU,CAC3B,EACET,EAAS,cAAc,oBAAoB,EAAE,UAAYiB,EACvDR,EAAK,QAAQ,SAAU,CAC3B,CACA"}